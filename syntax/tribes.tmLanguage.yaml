name: Tribes Script
scopeName: source.tribes
patterns:
  - include: "#comment"
  - include: "#string"
  - include: "#float_constant"
  - include: "#integer_constant"
  - include: "#tag_constant"
  - include: "#operator"
  - include: "#keyword"
  - include: "#variable"
  - include: "#function"
repository:
  comment:
    patterns:
      - begin: '/\*'
        end: '\*/'
        name: comment.block.tribes
        patterns:
          - include: "#comment"
          - include: "#string"
      - match: '//.*'
        name: comment.tribes
      - match: '#.*'
        name: comment.tribes
  string:
    patterns:
      - begin: '"'
        end: '"'
        name: string.quoted.double.tribes
        patterns:
          - match: '\\.'
            name: constant.character.escape.tribes
          - match: '\\x..'
            name: constant.character.escape.hex.tribes
      - match: '''([^''\r\n]|\\.)*''?'
        name: string.quoted.single.tribes
  float_constant:
    match: '\b(\d+(\.\d+)?[eE][+-]?\d+|\d+\.\d+)'
    name: constant.numeric.float.tribes
  integer_constant:
    match: '\b(0[xX][A-Fa-f0-9]*|\d+)'
    name: constant.numeric.integer.tribes
  tag_constant:
    match: '(?<![A-Za-z0-9_:])ID[A-Za-z0-9_:]+'
    name: support.constant.tag.tribes
  operator:
    patterns:
      - match: '[+\-*/=!<>&^|~@?:.]|\$\+'
        name: keyword.operator.tribes
  keyword:
    patterns:
      - match: '\b(if|else|while|for|break|continue|return|halt|switch|case)\b'
        name: keyword.control.tribes
      - match: '\binstant\b'
        name: keyword.instant.tribes
  variable:
    patterns:
      - include: "#global_variable"
      - include: "#local_variable"
  function:
    patterns:
      - begin: '(?<=[;{}])'
        end: '(?=[^\s\r\nA-Za-z0-9_:])'
        patterns:
          - begin: '\bfunction\b'
            end: '[^\s\r\nA-Za-z0-9_:]'
            beginCaptures:
              '0':
                name: 'keyword.function.tribes'
            patterns:
              - include: "#function_name"
          - include: "#keyword"
          - include: "#function_name"
      - match: '(?<=\.)\s*(detach)'
        name: keyword.detach.tribes
      - begin: '(?<=\.)\s*(attach)'
        end: '\)'
        beginCaptures:
          '0':
            name: keyword.attach.tribes
        patterns:
          - match: '\b(before|after)\b'
            name: constant.language.attach.tribes
          - include: "#function_name"
          - include: "source.tribes"
      - begin: '(?=\b[A-Za-z_][A-Za-z0-9_:]*\s*\()'
        end: '(?=\()'
        patterns:
          - include: "#function_name"
      - begin: '\b(before|after)\b'
        end: '[^\s\r\nA-Za-z0-9_:]'
        beginCaptures:
          '0':
            name: keyword.attach.tribes
        patterns:
          - include: "#function_name"
  namespace:
    match: '((?:(?!::)[A-Za-z0-9_:])*)(::)'
    captures:
      '1':
        name: entity.name.namespace
      '2':
        name: keyword.operator.namespace.tribes
  function_name:
    begin: '(?=[A-Za-z_])'
    end: '(?![A-Za-z0-9_:])'
    patterns:
      - include: "#namespace"
      - match: '[A-Za-z0-9_:]*'
        name: entity.name.function.tribes
  global_variable:
    begin: '(\$)(?=[A-Za-z_]|\s|$)'
    end: '(?![A-Za-z0-9_:])'
    name: meta.variable.global.tribes
    beginCaptures:
      '1':
        name: keyword.operator.global.tribes
    patterns:
      - include: "#namespace"
      - match: '[A-Za-z0-9_:]*'
        name: variable.global.tribes
  local_variable:
    begin: '(%)(?=[A-Za-z_]|\s|$)'
    end: '(?![A-Za-z0-9_:])'
    name: meta.variable.local.tribes
    beginCaptures:
      '1':
        name: keyword.operator.local.tribes
    patterns:
      - include: "#namespace"
      - match: '[A-Za-z0-9_:]*'
        name: variable.local.tribes